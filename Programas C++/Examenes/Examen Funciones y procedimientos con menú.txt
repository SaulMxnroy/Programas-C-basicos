#include <iostream>
using namespace std;

//prototipos
void menu(int op);
 int factorial (int n);
int sumatoria (int);
int potencia( int, int);
//Programa principal
int main () {
	int op=0;
	menu (op);
	return 0;
}
//Menú  
void menu(int op) {
	cout << "\n";
	cout << "1- Elija esta opción para encontrar el factorial de un número. " << endl;
	cout << "2- Elija esta opción para obtener la sumatoria de un número. " << endl;
	cout << "3- Elija esta opción para obtener el resultado de elevar un número a una potencia." << endl;
	cout << "0- Salir" << endl;
		cout << "-------------------------------------------------- " << endl;
	cin >> op;
		cout << "\n";
	while (op>0) 
	
	{
		switch (op)
		{
		case 1:
			int n;
				cout << "Ingrese un número para saber su factorial. " << endl;
				cin >> n;
				cout << "El factorial de " << n << " es: " <<  factorial(n) << endl;
		
			op = 0;
			menu(op);
			break;
		case 2:
			int cantidad;
			do {
				cout << "Ingrese el número de elementos a sumar" << endl;
				cin >> cantidad;
					} while (cantidad <=0);
					cout << "La sumatoria es: " << sumatoria (cantidad)  << endl;
			op = 0;
			menu(op);
			break;
		case 3: 
			int base, exponente;
			cout << "Ingrese la base. " << endl;
			cin >> base;
			cout << "Ingrese el exponente. " << endl;
			cin >> exponente;
			cout << "Potencia de " << base << " elevado a " << exponente << " es: " << potencia (base,exponente) << endl;
			op = 0;
			menu(op);
			break;
			
		case 4:
			if (op == 0) {
				cout <<  " Adiós."  << endl;
			}
			
						break;
		default:
			cout << " Elija una opción. ";
			op = 0;
			menu(op);
			break;
		}
	}
}



//Funcion recursiva factorial de un numero n 
int factorial (int n) {
 int resultado;
if (n == 0) { // caso base
	resultado = 1;
}
else {
	resultado = n * factorial(n-1);
}
return resultado;
}

//Función recursiva sumatoria
int sumatoria (int n) {
	int acum= 0;
	if (n==1) {
		acum = 1;
	}
	else {
		if ( n>1){
			acum = n + sumatoria(n-1);
		}
	}
	return acum;
}

//Función recursiva potencia
int potencia( int x, int y) {
	int pot;
	if (y==1) {
		pot = x;
	}
	else {
		pot = x * potencia (x,y-1);
	}
	return pot;
	
	
}

//Saúl Alfredo Monroy García UP180333